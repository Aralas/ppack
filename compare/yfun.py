import numpy as np
from phasepack.util import ConvMatrix

# A = np.ones((10, 5))
A = np.array([[0.32968882, 0.45367068, 0.11706004, 0.13466604, 0.11691722],
       [0.19672058, 0.74084807, 0.14327815, 0.37836463, 0.04555327],
       [0.89998406, 0.45292057, 0.96640223, 0.72827685, 0.78236553],
       [0.67969806, 0.12748807, 0.6379347 , 0.15481726, 0.51006976],
       [0.35580545, 0.44469988, 0.98961848, 0.0373949 , 0.48300945],
       [0.20736749, 0.43999312, 0.80226303, 0.48140398, 0.1231394 ],
       [0.722152  , 0.55002954, 0.79103552, 0.99989048, 0.35846322],
       [0.09496012, 0.90680488, 0.48219842, 0.01208584, 0.02508088],
       [0.2334139 , 0.22704725, 0.86977173, 0.22217862, 0.18640152],
       [0.29088114, 0.09694667, 0.12232646, 0.12467393, 0.44656773]])

A=A+0*1j
n = A.shape[1]
A = ConvMatrix(A)

isTruncated = False
b0 = np.vstack(( np.ones((5, 1))*0.3, np.ones((5, 1))*0.001 ))
m = np.size(b0)
alphay = 3
y = b0**2
lambda0 = np.sqrt(1/m * np.sum(y))
idx = np. ones(b0.shape)

if isTruncated:
    idx = np.abs(y) <= alphay**2 * lambda0**2

A.calc_yeigs(m, b0, idx)
